package io.github.exploiting.flinks.stateful.operators.model

object FraudRules {

  def inputIsFraudulent[Event](detector: Event => Boolean)(in: Event): Boolean =
    detector(in)

  def standardDeviation(list: Seq[Int]): Double =
    if (list.length > 2) Math.sqrt(list.sum / (list.length - 1)) else 0.0

  def mean(list: Seq[Int]): Double =
    if (list.nonEmpty) list.sum / list.length else 0.0

  def twiceStdDevPredicate(history: Seq[Int]): Int => Boolean = in =>
    in > mean(history) + (2 * standardDeviation(history)) ||
    in < mean(history) - (2 * standardDeviation(history))

  
}
